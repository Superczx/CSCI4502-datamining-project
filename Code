
import pandas as pd
import numpy as np
import sys
import matplotlib.pylab as plt
%matplotlib inline
import pylab as pl
from pandas import *


#read file
dfH= pd.read_csv("usp.csv")
# data clean, only take the useful data from the csv file
data=dfH[['State','Date Local','NO2 Mean', 'NO2 1st Max Value', 'NO2 1st Max Hour','NO2 AQI','O3 Mean', 'O3 1st Max Value', 'O3 1st Max Hour','O3 AQI','SO2 Mean', 'SO2 1st Max Value', 'SO2 1st Max Hour','SO2 AQI','CO Mean', 'CO 1st Max Value', 'CO 1st Max Hour','CO AQI']]
#clean date time
data['Date Local']=pd.to_datetime(data['Date Local'])
#dfg= dfH.sort_values(by="Date", ascending=True)
print(data.head(10))

#plot line chart for mean pollutants over time
ax=data.plot(x = "Date Local", y = ["NO2 Mean", "O3 Mean", "SO2 Mean", "CO Mean"],figsize=(20,10), grid=True,title="Pollutants Change")
ax.set_xlabel("Date", fontsize=16)
ax.set_ylabel("Value", fontsize=16)
plt.show()

#boxplot
fig = plt.figure(figsize=(10,10))
ax=data.boxplot(["NO2 Mean", "O3 Mean", "SO2 Mean", "CO Mean"])
ax.set_ylabel("Value", fontsize=16)
plt.show()

#scatter plot for "O3 Mean vs. NO2 Mean" correlation
ax=data.plot(kind="scatter", x="O3 Mean",y="NO2 Mean", color="b", label="O3 Mean vs. NO2 Mean")
plt.show()
corr=data['NO2 Mean'].corr(data['O3 Mean'])
print(corr)

#scatter plot for "SO2 Mean vs. NO2 Mean" correlation
ax=data.plot(kind="scatter", x="SO2 Mean",y="NO2 Mean", color="b", label="SO2 Mean vs. NO2 Mean")
plt.show()
corr=data['NO2 Mean'].corr(data['SO2 Mean'])
print(corr)

#scatter plot for "CO Mean vs. NO2 Mean" correlation
data.plot(kind="scatter", x="CO Mean",y="NO2 Mean", color="b", label="CO Mean vs. NO2 Mean")
plt.show()
corr=data['NO2 Mean'].corr(data['CO Mean'])
print(corr)

#scatter plot for "O3 Mean vs. SO2 Mean" correlation
data.plot(kind="scatter", x="O3 Mean",y="SO2 Mean", color="b", label="O3 Mean vs. SO2 Mean")
plt.show()
corr=data['O3 Mean'].corr(data['SO2 Mean'])
print(corr)

#scatter plot for "O3 Mean vs. CO Mean" correlation
data.plot(kind="scatter", x="O3 Mean",y="CO Mean", color="b", label="O3 Mean vs. CO Mean")
plt.show()
corr=data['O3 Mean'].corr(data['CO Mean'])
print(corr)

#scatter plot for "SO2 Mean vs. CO Mean" correlation
data.plot(kind="scatter", x="SO2 Mean",y="CO Mean", color="b", label="SO2 Mean vs. CO Mean")
plt.show()
corr=data['SO2 Mean'].corr(data['CO Mean'])
print(corr)

# Plot the aggregate decrease of all pollutants
data['year'] = data['Date Local'].dt.year
f, ax = plt.subplots(figsize=[10,4])
data.groupby(['year']).agg({'NO2 1st Max Value': 'mean',
                          'O3 1st Max Value': 'mean',
                          'SO2 1st Max Value': 'mean',
                          'CO 1st Max Value': 'mean'})\
.plot(lw=2,colormap='jet',marker='.',markersize=10, ax =ax,linewidth=2.5)
ax.set_title('Mean Pollutant Max Value Over Time')
ax.set(xlabel="Year", ylabel="Max value")
plt.show()

#compare California and New York AQI
dfHcal = data[(data.State=='California')].copy()
dfHnew = data[(data.State=='New York')].copy()
#print(dfHcal)
dfHcal['year'] = dfHcal['Date Local'].dt.year
dfHnew['year'] = dfHnew['Date Local'].dt.year
f, ax = plt.subplots(figsize=[10,4])
dfHcal.groupby(['year']).agg({'NO2 AQI': 'mean',
                          'O3 AQI': 'mean',
                          'SO2 AQI': 'mean',
                          'CO AQI': 'mean'})\
.plot(lw=2,colormap='Paired',marker='.',markersize=10, ax =ax,linewidth=2.5)

#f, ax = plt.subplots(figsize=[10,4])
dfHnew.groupby(['year']).agg({'NO2 AQI': 'mean',
                          'O3 AQI': 'mean',
                          'SO2 AQI': 'mean',
                          'CO AQI': 'mean'})\
.plot(lw=2,colormap='Paired',marker='d',markersize=10, ax =ax,linewidth=2.5)
ax.set_title('Mean Pollutant AQI Over Time comparsion California and New York')
ax.set(xlabel="year", ylabel="AQI")

plt.show()





#four pollutants AQI comparing four states
#NO2
data1=data[['State','Date Local','NO2 AQI']]
data1
state1=data1[(data1.State=='California')]
state2=data1[(data1.State=='Colorado')]
state3=data1[(data1.State=='Florida')]
state4=data1[(data1.State=='New York')]
state1['year'] = state1['Date Local'].dt.year
state2['year'] = state2['Date Local'].dt.year
state3['year'] = state3['Date Local'].dt.year
state4['year'] = state4['Date Local'].dt.year
fig, ax = plt.subplots(figsize=[10,4])
state1.groupby(['year']).agg({'NO2 AQI': 'mean'}).plot(lw=2,color='red', ax =ax,linewidth=2.5)
state2.groupby(['year']).agg({'NO2 AQI': 'mean'}).plot(lw=2,color='blue', ax =ax,linewidth=2.5)
state3.groupby(['year']).agg({'NO2 AQI': 'mean'}).plot(lw=2,color='orange',ax =ax,linewidth=2.5)
state4.groupby(['year']).agg({'NO2 AQI': 'mean'}).plot(lw=2,color='black', ax =ax,linewidth=2.5)
ax.set_title('NO2 AQI of Four States Over Time')
ax.set(xlabel="year", ylabel="NO2 AQI")
ax.legend(['California','Colorado','Florida','New York'])
plt.show()


#O3
data2=data[['State','Date Local','O3 AQI']]
data2
state1=data2[(data2.State=='California')]
state2=data2[(data2.State=='Colorado')]
state3=data2[(data2.State=='Florida')]
state4=data2[(data2.State=='New York')]
state1['year'] = state1['Date Local'].dt.year
state2['year'] = state2['Date Local'].dt.year
state3['year'] = state3['Date Local'].dt.year
state4['year'] = state4['Date Local'].dt.year
fig, ax = plt.subplots(figsize=[10,4])
state1.groupby(['year']).agg({'O3 AQI': 'mean'}).plot(lw=2,color='red', ax =ax,linewidth=2.5)
state2.groupby(['year']).agg({'O3 AQI': 'mean'}).plot(lw=2,color='blue', ax =ax,linewidth=2.5)
state3.groupby(['year']).agg({'O3 AQI': 'mean'}).plot(lw=2,color='orange',ax =ax,linewidth=2.5)
state4.groupby(['year']).agg({'O3 AQI': 'mean'}).plot(lw=2,color='black', ax =ax,linewidth=2.5)
ax.set_title('O3 AQI of Four States Over Time')
ax.set(xlabel="year", ylabel="O3 AQI")
ax.legend(['California','Colorado','Florida','New York'])
plt.show()

#SO2
data3=data[['State','Date Local','SO2 AQI']]
data3
state1=data3[(data3.State=='California')]
state2=data3[(data3.State=='Colorado')]
state3=data3[(data3.State=='Florida')]
state4=data3[(data3.State=='New York')]
state1['year'] = state1['Date Local'].dt.year
state2['year'] = state2['Date Local'].dt.year
state3['year'] = state3['Date Local'].dt.year
state4['year'] = state4['Date Local'].dt.year
fig, ax = plt.subplots(figsize=[10,4])
state1.groupby(['year']).agg({'SO2 AQI': 'mean'}).plot(lw=2,color='red', ax =ax,linewidth=2.5)
state2.groupby(['year']).agg({'SO2 AQI': 'mean'}).plot(lw=2,color='blue', ax =ax,linewidth=2.5)
state3.groupby(['year']).agg({'SO2 AQI': 'mean'}).plot(lw=2,color='orange',ax =ax,linewidth=2.5)
state4.groupby(['year']).agg({'SO2 AQI': 'mean'}).plot(lw=2,color='black', ax =ax,linewidth=2.5)
ax.set_title('SO2 AQI of Four States Over Time')
ax.set(xlabel="year", ylabel="SO2 AQI")
ax.legend(['California','Colorado','Florida','New York'])
plt.show()

#CO
data4=data[['State','Date Local','CO AQI']]
data4
state1=data4[(data4.State=='California')]
state2=data4[(data4.State=='Colorado')]
state3=data4[(data4.State=='Florida')]
state4=data4[(data4.State=='New York')]
state1['year'] = state1['Date Local'].dt.year
state2['year'] = state2['Date Local'].dt.year
state3['year'] = state3['Date Local'].dt.year
state4['year'] = state4['Date Local'].dt.year
fig, ax = plt.subplots(figsize=[10,4])
state1.groupby(['year']).agg({'CO AQI': 'mean'}).plot(lw=2,color='red', ax =ax,linewidth=2.5)
state2.groupby(['year']).agg({'CO AQI': 'mean'}).plot(lw=2,color='blue', ax =ax,linewidth=2.5)
state3.groupby(['year']).agg({'CO AQI': 'mean'}).plot(lw=2,color='orange',ax =ax,linewidth=2.5)
state4.groupby(['year']).agg({'CO AQI': 'mean'}).plot(lw=2,color='black', ax =ax,linewidth=2.5)
ax.set_title('CO AQI of Four States Over Time')
ax.set(xlabel="year", ylabel="CO AQI")
ax.legend(['California','Colorado','Florida','New York'])
plt.show()






data5=data[['State','NO2 AQI','O3 AQI','SO2 AQI','CO AQI']]
data5

data5[(data5.State=='Colorado')].hist(bins=20)
plt.show






data6=data[['State','NO2 AQI','O3 AQI','SO2 AQI','CO AQI']]
data6
state1=data6[(data6.State=='California')]
state2=data6[(data6.State=='Colorado')]
state3=data6[(data6.State=='Florida')]
state4=data6[(data6.State=='New York')]
total=state1.append(state2).append(state3).append(state4)

total.groupby (['State']).agg({'NO2 AQI': 'mean',
                          'O3 AQI': 'mean',
                          'SO2 AQI': 'mean',
                          'CO AQI': 'mean'})\
.plot.bar()
plt.show
